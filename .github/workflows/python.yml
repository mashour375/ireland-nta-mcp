name: Python

on:
    push:
        branches:
            - main
    pull_request:
    release:
        types: [published]

jobs:
    test:
        name: Test nta server
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Install uv
              uses: astral-sh/setup-uv@v3

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version-file: "./.python-version"

            - name: Install dependencies
              working-directory: ./mcp_server_nta
              run: uv sync --frozen --all-extras --dev

            - name: Check if tests exist
              id: check-tests
              working-directory: ./mcp_server_nta
              run: |
                  if [ -d "tests" ] || [ -d "test" ] || grep -q "pytest" pyproject.toml; then
                    echo "has-tests=true" >> $GITHUB_OUTPUT
                  else
                    echo "has-tests=false" >> $GITHUB_OUTPUT
                  fi

            - name: Run tests
              if: steps.check-tests.outputs.has-tests == 'true'
              working-directory: ./mcp_server_nta
              run: uv run pytest

    build:
        name: Build nta server
        runs-on: ubuntu-latest
        needs: test
        steps:
            - uses: actions/checkout@v4

            - name: Install uv
              uses: astral-sh/setup-uv@v3

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version-file: "./.python-version"

            - name: Install dependencies
              working-directory: ./mcp_server_nta
              run: uv sync --frozen --all-extras --dev

            - name: Run pyright
              working-directory: ./mcp_server_nta
              run: uv run --frozen pyright

            - name: Build package
              run: uv build

            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: dist_mcp_server_nta
                  path: ./dist/

    publish:
        runs-on: ubuntu-latest
        needs: [build]
        if: github.event_name == 'release'

        name: Publish Ireland NTA MCP package

        environment: release
        permissions:
            id-token: write # Required for trusted publishing

        steps:
            - name: Download artifacts
              uses: actions/download-artifact@v4
              with:
                  name: dist_mcp_server_nta
                  path: dist/

            - name: Publish package to PyPI
              uses: pypa/gh-action-pypi-publish@release/v1
